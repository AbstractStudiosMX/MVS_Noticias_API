// <auto-generated />
using System;
using MVS_Noticias_API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MVS_Noticias_API.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MVS_Noticias_API.Models.Domain.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MVS_Noticias_API.Models.Saved.SavedNews", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("SectionsAndIds")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("SavedNews");
                });

            modelBuilder.Entity("MVS_Noticias_API.Models.Settings.AccessibilitySettings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApareanceMode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FontSize")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AccessibilitySettings");
                });

            modelBuilder.Entity("MVS_Noticias_API.Models.Settings.CustomSettings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CDMXOrder")
                        .HasColumnType("int");

                    b.Property<int>("CienciaTecnologiaOrder")
                        .HasColumnType("int");

                    b.Property<int>("EconomiaOrder")
                        .HasColumnType("int");

                    b.Property<int>("EntretenimientoOrder")
                        .HasColumnType("int");

                    b.Property<int>("EntrevistasOrder")
                        .HasColumnType("int");

                    b.Property<int>("EstadosOrder")
                        .HasColumnType("int");

                    b.Property<int>("GuardadosOrder")
                        .HasColumnType("int");

                    b.Property<int>("MVSDeportesOrder")
                        .HasColumnType("int");

                    b.Property<int>("MasLeidasOrder")
                        .HasColumnType("int");

                    b.Property<int>("MascotasOrder")
                        .HasColumnType("int");

                    b.Property<int>("MundoOrder")
                        .HasColumnType("int");

                    b.Property<int>("NacionalOrder")
                        .HasColumnType("int");

                    b.Property<int>("OpinionOrder")
                        .HasColumnType("int");

                    b.Property<int>("PoliciacaOrder")
                        .HasColumnType("int");

                    b.Property<int>("Programacion")
                        .HasColumnType("int");

                    b.Property<int>("SaludBienestarOrder")
                        .HasColumnType("int");

                    b.Property<int>("TendenciasOrder")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("VideosOrder")
                        .HasColumnType("int");

                    b.Property<int>("ViralOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("CustomSettings");
                });

            modelBuilder.Entity("MVS_Noticias_API.Models.Settings.NotificationsSettings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("CDMX")
                        .HasColumnType("bit");

                    b.Property<bool>("CienciaTecnologia")
                        .HasColumnType("bit");

                    b.Property<bool>("Economia")
                        .HasColumnType("bit");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Entretenimiento")
                        .HasColumnType("bit");

                    b.Property<bool>("Entrevistas")
                        .HasColumnType("bit");

                    b.Property<bool>("Estados")
                        .HasColumnType("bit");

                    b.Property<string>("Keywords")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("MVSDeportes")
                        .HasColumnType("bit");

                    b.Property<bool>("Mascotas")
                        .HasColumnType("bit");

                    b.Property<bool>("Mundo")
                        .HasColumnType("bit");

                    b.Property<bool>("Nacional")
                        .HasColumnType("bit");

                    b.Property<bool>("Opinion")
                        .HasColumnType("bit");

                    b.Property<bool>("Policiaca")
                        .HasColumnType("bit");

                    b.Property<bool>("Programacion")
                        .HasColumnType("bit");

                    b.Property<bool>("SaludBienestar")
                        .HasColumnType("bit");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Tendencias")
                        .HasColumnType("bit");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<bool>("Videos")
                        .HasColumnType("bit");

                    b.Property<bool>("Viral")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("NotificationsSettings");
                });

            modelBuilder.Entity("MVS_Noticias_API.Models.Saved.SavedNews", b =>
                {
                    b.HasOne("MVS_Noticias_API.Models.Domain.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("MVS_Noticias_API.Models.Settings.AccessibilitySettings", b =>
                {
                    b.HasOne("MVS_Noticias_API.Models.Domain.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("MVS_Noticias_API.Models.Settings.CustomSettings", b =>
                {
                    b.HasOne("MVS_Noticias_API.Models.Domain.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("MVS_Noticias_API.Models.Settings.NotificationsSettings", b =>
                {
                    b.HasOne("MVS_Noticias_API.Models.Domain.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
